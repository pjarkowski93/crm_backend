# Generated by Django 4.0.4 on 2022-06-16 16:34

import uuid

import django.db.models.deletion
from django.contrib.auth import get_user_model
from django.db import migrations, models


def create_team(apps, schema_editor):
    Team = apps.get_model("user", "Team")
    Department = apps.get_model("user", "Department")
    department_1, _ = Department.objects.get_or_create(name="department_1")
    department_2, _ = Department.objects.get_or_create(name="department_2")
    team_1, _ = Team.objects.get_or_create(
        name="traders_team_1", department=department_1
    )
    team_2, _ = Team.objects.get_or_create(
        name="traders_team_2", department=department_2
    )

    User = get_user_model()
    if not User.objects.filter(username="firstsalesman").exists():
        user1, _ = User.objects.get_or_create(
            username="firstsalesman",
            first_name="Trader1 first name",
            last_name="Trader1 last name",
            email="firstsalesman@admin.pl",
            department__id=department_1.id,
            team__id=team_1.id,
            password="traderhaslo123!",
        )
        user1.set_password(user1.password)
        user1.save()

    if not User.objects.filter(username="first_manager").exists():
        user2, _ = User.objects.get_or_create(
            username="first_manager",
            first_name="Manager1 first name",
            last_name="manager1 last name",
            email="first_manager@admin.pl",
            department__id=department_1.id,
            password="managerhaslo123!",
        )
        user2.set_password(user2.password)
        user2.save()

    if not User.objects.filter(username="first_teamleader").exists():
        user3, _ = User.objects.get_or_create(
            username="first_teamleader",
            first_name="TeamLeader first name",
            last_name="TeamLeader last name",
            email="first_teamleader@admin.pl",
            department__id=department_1.id,
            team__id=team_1.id,
            password="teamleaderhaslo123!",
        )
        user3.set_password(user3.password)
        user3.save()


class Migration(migrations.Migration):

    dependencies = [
        ("user", "0002_alter_user_email"),
    ]

    operations = [
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uuid", models.UUIDField(default=uuid.uuid4)),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uuid", models.UUIDField(default=uuid.uuid4)),
                ("name", models.CharField(max_length=255, unique=True)),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="teams",
                        to="user.department",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="user",
            name="department",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="manages",
                to="user.department",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="team",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="teammates",
                to="user.team",
            ),
        ),
        migrations.RunPython(create_team, reverse_code=migrations.RunPython.noop),
    ]
